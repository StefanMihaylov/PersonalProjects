//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.Services.MessagesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageInput", Namespace="http://schemas.datacontract.org/2004/07/ChatServer.Common.Models")]
    [System.SerializableAttribute()]
    public partial class MessageInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChatRoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParticipantIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChatRoomId {
            get {
                return this.ChatRoomIdField;
            }
            set {
                if ((this.ChatRoomIdField.Equals(value) != true)) {
                    this.ChatRoomIdField = value;
                    this.RaisePropertyChanged("ChatRoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParticipantId {
            get {
                return this.ParticipantIdField;
            }
            set {
                if ((this.ParticipantIdField.Equals(value) != true)) {
                    this.ParticipantIdField = value;
                    this.RaisePropertyChanged("ParticipantId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/ChatServer.Common.Models")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChatRoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSystemMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChatRoomId {
            get {
                return this.ChatRoomIdField;
            }
            set {
                if ((this.ChatRoomIdField.Equals(value) != true)) {
                    this.ChatRoomIdField = value;
                    this.RaisePropertyChanged("ChatRoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSystemMessage {
            get {
                return this.IsSystemMessageField;
            }
            set {
                if ((this.IsSystemMessageField.Equals(value) != true)) {
                    this.IsSystemMessageField = value;
                    this.RaisePropertyChanged("IsSystemMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantName {
            get {
                return this.ParticipantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantNameField, value) != true)) {
                    this.ParticipantNameField = value;
                    this.RaisePropertyChanged("ParticipantName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessagesService.IMessagesManager")]
    public interface IMessagesManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesManager/AddMessage", ReplyAction="http://tempuri.org/IMessagesManager/AddMessageResponse")]
        void AddMessage(ChatClient.Services.MessagesService.MessageInput message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesManager/AddMessage", ReplyAction="http://tempuri.org/IMessagesManager/AddMessageResponse")]
        System.Threading.Tasks.Task AddMessageAsync(ChatClient.Services.MessagesService.MessageInput message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesManager/GetMessages", ReplyAction="http://tempuri.org/IMessagesManager/GetMessagesResponse")]
        ChatClient.Services.MessagesService.Message[] GetMessages(int chatRoomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesManager/GetMessages", ReplyAction="http://tempuri.org/IMessagesManager/GetMessagesResponse")]
        System.Threading.Tasks.Task<ChatClient.Services.MessagesService.Message[]> GetMessagesAsync(int chatRoomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessagesManagerChannel : ChatClient.Services.MessagesService.IMessagesManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessagesManagerClient : System.ServiceModel.ClientBase<ChatClient.Services.MessagesService.IMessagesManager>, ChatClient.Services.MessagesService.IMessagesManager {
        
        public MessagesManagerClient() {
        }
        
        public MessagesManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessagesManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagesManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagesManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddMessage(ChatClient.Services.MessagesService.MessageInput message) {
            base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task AddMessageAsync(ChatClient.Services.MessagesService.MessageInput message) {
            return base.Channel.AddMessageAsync(message);
        }
        
        public ChatClient.Services.MessagesService.Message[] GetMessages(int chatRoomId) {
            return base.Channel.GetMessages(chatRoomId);
        }
        
        public System.Threading.Tasks.Task<ChatClient.Services.MessagesService.Message[]> GetMessagesAsync(int chatRoomId) {
            return base.Channel.GetMessagesAsync(chatRoomId);
        }
    }
}
