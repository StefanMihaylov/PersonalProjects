<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>

  <castle>
    <properties>
      <connectionString>metadata=res://*/ChatDbModel.csdl|res://*/ChatDbModel.ssdl|res://*/ChatDbModel.msl;provider=System.Data.SqlClient;provider connection string="data source=.;initial catalog=NaxexChatDb; integrated security=True; MultipleActiveResultSets=True;App=EntityFramework"</connectionString>
    </properties>
    <include uri="file://ChatServerDI.xml" />
  </castle>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>

  <system.serviceModel>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true">
    </serviceHostingEnvironment>
    <behaviors>
      <endpointBehaviors>
        <behavior name="webHttpBehavior">
          <webHttp />
        </behavior>
      </endpointBehaviors>
      <serviceBehaviors>
        <behavior name="mexBehavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
        <behavior name="TNServiceBehaviors">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <serviceThrottling maxConcurrentCalls="1000" maxConcurrentSessions="1000"
            maxConcurrentInstances="1000" />
        </behavior>
        <behavior name="">
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <customBinding>
        <binding name="webJsonMessageEncoding_http">
          <webMessageEncoding webContentTypeMapperType="ChatServer.Common.DispatchFormatters.RawWebContentTypeMapper, ChatServer.Common">
            <readerQuotas maxDepth="1000000000" maxArrayLength="1000000000" maxStringContentLength="1000000000" />
          </webMessageEncoding>
          <httpTransport maxBufferSize="100000000" maxReceivedMessageSize="100000000" manualAddressing="true" />
        </binding>
        <binding name="webMessageEncoding_http">
          <webMessageEncoding>
            <readerQuotas maxDepth="1000000000" maxArrayLength="1000000000" maxStringContentLength="1000000000" />
          </webMessageEncoding>
          <httpTransport maxBufferSize="100000000" maxReceivedMessageSize="100000000" manualAddressing="true" />
        </binding>
      </customBinding>
    </bindings>
    <services>
      <service name="ChatServer.Core.Managers.ParticipantsManager" behaviorConfiguration="TNServiceBehaviors">
        <endpoint address=""
                  binding="basicHttpBinding"
                  contract="ChatServer.Core.Interfaces.IParticipantsManager" />
        <endpoint address="json"
                  binding="customBinding"
                  bindingConfiguration="webJsonMessageEncoding_http"
                  contract="ChatServer.Core.Interfaces.IParticipantsManager"
                  behaviorConfiguration="webHttpBehavior"/>
        <endpoint address="rest"
                  binding="customBinding"
                  bindingConfiguration="webMessageEncoding_http"
                  contract="ChatServer.Core.Interfaces.IParticipantsManagerREST"
                  behaviorConfiguration="webHttpBehavior"/>
      </service>
      <service name="ChatServer.Core.Managers.ChatRoomsManager" behaviorConfiguration="TNServiceBehaviors">
        <endpoint address=""
                  binding="basicHttpBinding"
                  contract="ChatServer.Core.Interfaces.IChatRoomsManager" />
      </service>
      <service name="ChatServer.Core.Managers.MessagesManager" behaviorConfiguration="TNServiceBehaviors">
        <endpoint address=""
                  binding="basicHttpBinding"
                  contract="ChatServer.Core.Interfaces.IMessagesManager" />
      </service>
      <service name="ChatServer.Core.Managers.DuplexService" behaviorConfiguration="TNServiceBehaviors">
        <endpoint address=""
                  binding="wsDualHttpBinding"
                  contract="ChatServer.Core.Interfaces.IDuplexService" />
      </service>
    </services>
  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true" />
    <httpErrors errorMode="Detailed"/>
  </system.webServer>

  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="mssqllocaldb" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <!--<connectionStrings>
    <add name="NaxexChatDbContext" connectionString="metadata=res://*/ChatDbModel.csdl|res://*/ChatDbModel.ssdl|res://*/ChatDbModel.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=.;initial catalog=NaxexChatDb; integrated security=True; MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>-->
</configuration>